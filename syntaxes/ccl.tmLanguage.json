{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "ANSYS CCL",
	"patterns": [
		{
			"include": "#comment"
		},
		{
			"include": "#functions_math"
		},
		{
			"include": "#functions_operators"
		},
		{
			"include": "#physical_constants"
		},
		{
			"include": "#units"
		},
		{
			"include": "#section_headings"
		},
		{
			"include": "#option"
		}
	],
	"repository": {
		"functions_math": {
			"patterns": [
				{
					"name": "support.function.math.ccl",
					"match": "\\W(abs|sin|cos|asin|acos|tan|atan|if|atans2|besselJ|besselY|cosh|exp|int|loge|log10|min|max|mod|nint|sinh|sqrt|step|tanh)\\W"
				}
			]
		},
		"functions_operators": {
			"patterns": [
				{
					"name": "meta",
					"contentName": "variable.parameter",
					"begin": "\\W(area|area_x|area_y|area_z|areaAve|areaAve_x|areaAve_y|areaAve_z|areaInt|areaInt_x|areaInt_y|areaInt_z|ave|count|countTrue|force|forceNorm|force_x|force_y|force_z|inside|length|lengthAve|lengthInt|mass|massAve|masssFlow|massFlowAve|massFlowAveAbs|massFlowInt|massInt|maxVal|minVal|probe|rbstate|rmsAve|sum|torque|torque_x|torque_y|torque_z|volume|volumeAve|volumeInt|probe)(\\()",
					"end": "\\)@([\\w\\s]+)",
					"comment": "begin captures the built-in function name, end captures the @location, and the contentName is the variable parameter of the function",
					"beginCaptures": {
						"1":{
							"patterns": [
								{
									"name": "support.function.operator.ccl",
									"match": ".*",
									"comment": "Captures the built-in function name"
								}
							]
						}
					},
					"endCaptures": {
						"1": {
							"patterns": [
								{
									"name":"constant.other",
									"match": ".*",
									"comment": "The location the function is evaluated at."
								}
							]
						}
					}
				}
			]
		},
		"physical_constants": {
			"patterns": [
				{
					"name": "constant.other.ccl",
					"match": "\\b(avogadro|boltzmann|clight|e|echarge|spspermo|g|mupermo|pi|plank|stegan)\\b"
				}
			]
		},
		"comment": {
			"patterns": [
				{
					"name": "comment.line.number-sign.ccl",
					"match": "^\\#.*"
				}
			]
		},
		"units": {
			"patterns": [
				{
					"name": "keyword.other.unit.ccl",
					"match": "\\[.+?\\]"
				}
			]
		},
		"section_headings": {
			"patterns": [
				{
					"name": "keyword.control.ccl",
					"match": "^\\s*[A-Z ]+\\:"
				}
			]
		},
		"option": {
			"patterns": [
				{
					"name":"constant.language.ccl",
					"match": "^\\s+Option"
				}
			]
		}
	},
	"scopeName": "source.ccl"
}